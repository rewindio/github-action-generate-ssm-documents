---
  schemaVersion: "2.2"
  description: "Run Github script"
  parameters:
    githubTokenLocation:
      type: "String"
      description: "Location in ssm param store of your github token"
      default: "none"
    workingDirectory:
      type: "String"
      default: ""
      description: "(Optional) The path where the content will be downloaded and executed\
        \ from on your instance."
      maxChars: 4096
    executionTimeout:
      description: "(Optional) The time in seconds for a command to complete before\
        \ it is considered to have failed. Default is 3600 (1 hour). Maximum is 28800\
        \ (8 hours)."
      type: "String"
      default: "3600"
      allowedPattern: "([1-9][0-9]{0,3})|(1[0-9]{1,4})|(2[0-7][0-9]{1,3})|(28[0-7][0-9]{1,2})|(28800)"
    parameters:
      type: "String"
      default: ""
      description: "(Optional) Parameters to be passed to the script. These are positional."
  mainSteps:
  - action: "aws:downloadContent"
    name: "downloadContent"
    inputs:
      sourceType: "GitHub"
      sourceInfo: "{\"owner\":\"$REPO_OWNER\", \"repository\":\"$REPO_NAME\",\"getOptions\" : \"branch:main\",\"path\" :\"$filePath/\", \"tokenInfo\":\"{{ ssm-secure:{{githubTokenLocation}} }}\"}"
      destinationPath: "{{ workingDirectory }}"
  - precondition:
      StringEquals:
      - "platformType"
      - "Linux"
    action: "aws:runShellScript"
    name: "runShellScript"
    inputs:
      runCommand:
        - 'cp $fileName /lib'
        - if [[ "$fileName" == *".rails."* ]]
        - then
        -   sudo -i bash -c 'cd /var/app/current && rails r /lib/$fileName {{ parameters }}'
        - else
        -   sudo -i bash -c '/lib/$fileName {{ parameters }}'
        - fi
        - sudo -i bash -c 'rm /lib/$fileName'
      workingDirectory: "{{ workingDirectory }}"
      timeoutSeconds: "{{ executionTimeout }}"
